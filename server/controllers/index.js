const { Articles, Topics, Comments, Users } = require('../models/models');

////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////

function fetchAllArticles(req, res, next) {
    Articles.find()
        .then(articles => {
            return res.status(200).send({ articles });
        })
        .catch(err => next(err));
}


////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////


function fetchAllTopics (req, res, next) {
    Topics.find()
        .then(topics => {
            return res.status(200).send({ topics });
        })
        .catch(err => next(err));
}

////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////

function fetchArticlesByTopic (req, res, next) {
    Articles.find({ belongs_to: req.params.topic })
        .then(articles => {
            return res.status(200).send({ articles });
        })
        .catch(err => next(err));
}

////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////

function fetchCommentsFromArticle (req, res, next) {
    Comments.find({ belongs_to: req.params.article_id })
        .then(comment => {
            return res.status(200).send({ comment });
        })
        .catch(err => next(err));
}

////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////

function addCommentToArticle (req, res, next) {
    let comment = new Comments({
        body: req.body.comment,
        belongs_to: req.params.article_id
    });
    comment.save()
        .then( doc => {
            console.log('Posted a new comment');
            return res.status(200).send(doc);
        })
        .catch(err => next(err));
}




////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////

function changeArticleVoteByOne (req, res, next) {
    let inc = 0;
    console.log(req.params.article_id);
    if (req.query.vote === 'up') inc = 1;
    else if (req.query.vote === 'down') inc = -1;
    Articles.findByIdAndUpdate(req.params.article_id, { $inc: { votes: inc } },
        { new: true })
        .then(article => res.send(article))
        .catch(err => next(err));
}

////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////

function changeCommentVoteByOne (req, res) {
    res.send('hello6');
}

////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////

function deleteComment (req, res) {
    Comments.findByIdAndRemove(req.params.comment_id, (err) => {
        if (err) console.error(err);
    });
    res.send('Comment deleted');
}


////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////

function fetchUser (req, res, next) {
    console.log(req.params.username);
    Users.find({ username: req.params.username })
        .then(userinfo => {
            return res.status(200).send({ userinfo });
        })

        .catch(err => next(err));
}

////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////

module.exports = {fetchAllTopics, fetchArticlesByTopic, fetchAllArticles, fetchCommentsFromArticle, addCommentToArticle, changeArticleVoteByOne, changeCommentVoteByOne, deleteComment, fetchUser};